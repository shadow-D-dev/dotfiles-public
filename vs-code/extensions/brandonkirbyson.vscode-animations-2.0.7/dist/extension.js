(()=>{"use strict";var t={307:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getUpdatedCSS=e.updateDuration=e.getCSSFile=e.generateCSS=void 0;const o=n(398),s=n(543);async function i(t,e){let n="";try{await o.workspace.fs.readFile(o.Uri.file(e+t)).then((t=>n+=t.toString()))}catch(t){console.error("Error reading css file",t)}return n}function a(t,e){const n=o.workspace.getConfiguration("animations");let s=n.get("Durations")[e];return(!s||parseInt(`${s}`)>1e4)&&(s=n.get("Default-Duration"),!s||parseInt(`${s}`)>1e4)?t:t=t.replace(/\/\*<Duration>\*\/.*\/\*<\/Duration>\*\//g,`${s}ms`)}async function r(t,e){let n="";n+=await i("Default-Transitions.css",e),n+=await i("Custom-Animations.css",e);const s=o.workspace.getConfiguration("animations");for(const t of["Command-Palette","Tabs","Active","Scrolling"]){const o=s.get(t);"None"!==o&&(n+=a(await i(`${t}/${o}.css`,e),t))}for(const t of["Smooth-Mode"])s.get(t)&&(n+=a(await i(`Misc/${t}.css`,e),t));return n=n.replace(/\n/g,""),n}e.generateCSS=function(t){r(0,t.extensionPath+"/dist/css/").then((t=>{o.workspace.getConfiguration("animations").get("Enabled")?(0,s.sendMessage)((0,s.getMessengerData)(t)):(0,s.sendMessage)((0,s.getMessengerData)(""))}))},e.getCSSFile=i,e.updateDuration=a,e.getUpdatedCSS=r},456:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.addFocusHandler=e.FocusDimMode=void 0;let n={onBlur:()=>{},onFocus:()=>{}};var o;!function(t){t.window="Full Window",t.editor="Everything But Editor",t.terminal="Everything But Terminal",t.editorAndTerminal="Everything But Editor and Terminal",t.none="None"}(o||(e.FocusDimMode=o={})),e.addFocusHandler=function(t){window.removeEventListener("blur",n.onBlur),window.removeEventListener("blur",n.onFocus);const e=".minimap, .decorationsOverviewRuler, .composite.title, .title.tabs, .editor-container:has(.settings-editor)";let s="";switch(t.mode){case o.window:s=".monaco-workbench";break;case o.editor:s=`.split-view-view:not(:has(.editor-instance > .monaco-editor, .editor-instance > .monaco-diff-editor)), .split-view-view:has(> .terminal-outer-container), ${e}`;break;case o.terminal:s=`.split-view-view:not(:has(.terminal)), ${e}`;break;case o.editorAndTerminal:s=`.split-view-view:not(:has(.editor-instance > .monaco-editor, .editor-instance > .monaco-diff-editor)):not(:has(.terminal)), ${e}`;break;case o.none:return}const i=()=>{let t=Array.from(document.querySelectorAll(s));return t=t.filter((e=>!t.some((t=>t.contains(e)&&t!==e)))),t};i().forEach((e=>{e.style.transition=`opacity ${t.duration}ms`})),n.onBlur=()=>{i().forEach((e=>{e.style.opacity=`${t.amount}%`}))},n.onFocus=()=>{i().forEach((t=>{t.style.opacity="100%"}))},window.addEventListener("blur",n.onBlur),window.addEventListener("focus",n.onFocus)}},265:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.activate=e.forVSCode=void 0;const o=n(398),s=n(307),i=n(631),a=n(543);e.forVSCode=!0,e.activate=function(t){const n=e.forVSCode?o.workspace.getConfiguration("animations").get("Install-Method"):i.InstallMethod.apcCustomizeUI,r=new i.InstallationManager(t,n);!e.forVSCode||void 0!==t.globalState.get("firstTime")&&!0!==t.globalState.get("firstTime")||(r.checkForInstallMethod(),t.globalState.update("firstTime",!1)),r.verifyInstallMethod();const l=o.workspace.getConfiguration("animations").get("Auto-Install");(0,a.initMessenger)(),(0,s.generateCSS)(t),l&&r.install(!0),t.subscriptions.push(o.commands.registerCommand("VSCode-Animations.installAnimations",(()=>{r.verifyInstallMethod(),r.install()}))),t.subscriptions.push(o.commands.registerCommand("VSCode-Animations.changeInstallMethod",(()=>{e.forVSCode?r.showInstallMethodPicker():o.window.showErrorMessage("This command is not available in VSCodium")}))),t.subscriptions.push(o.commands.registerCommand("VSCode-Animations.getScriptPath",(()=>{o.env.clipboard.writeText(r.getPath()),o.window.showInformationMessage(`Animations Script Path Copied to Clipboard! (${r.getPath()})`)}))),t.subscriptions.push(o.commands.registerCommand("VSCode-Animations.disableAnimations",(()=>{o.workspace.getConfiguration("animations").update("Enabled",!1,o.ConfigurationTarget.Global),(0,s.generateCSS)(t),o.window.showInformationMessage("Disabled Animations")}))),t.subscriptions.push(o.commands.registerCommand("VSCode-Animations.enableAnimations",(()=>{o.workspace.getConfiguration("animations").update("Enabled",!0,o.ConfigurationTarget.Global),(0,s.generateCSS)(t),o.window.showInformationMessage("Enabled Animations")}))),t.subscriptions.push(o.commands.registerCommand("VSCode-Animations.openAnimationSettings",(()=>{o.commands.executeCommand("workbench.action.openSettings","animations").then((()=>{o.commands.executeCommand("settings.action.focusSettingsList")}))}))),t.subscriptions.push(o.commands.registerCommand("VSCode-Animations.openCustomCSS",(()=>{o.workspace.openTextDocument(o.Uri.file(t.extensionPath+"/dist/css/Custom-Animations.css")).then((t=>{o.window.showTextDocument(t)}))}))),t.subscriptions.push(o.workspace.onDidChangeTextDocument((e=>{e.document.uri.fsPath===t.extensionPath+"/dist/css/Custom-Animations.css"&&o.workspace.getConfiguration("animations").get("Custom-CSS")&&(0,s.generateCSS)(t)}))),o.workspace.onDidChangeConfiguration((e=>{e.affectsConfiguration("animations")&&(0,s.generateCSS)(t)}))}},631:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.InstallationManager=e.InstallMethod=void 0;const o=n(857),s=n(398),i=n(265);var a;!function(t){t.customCSSAndJS="Custom CSS and JS",t.customUI="Custom UI Style",t.apcCustomizeUI="Apc Customize UI++"}(a||(e.InstallMethod=a={}));const r={[a.customCSSAndJS]:{extensionID:"be5invis.vscode-custom-css",extensionName:"Custom CSS and JS",importSetting:"vscode_custom_css.imports",installCommand:"extension.installCustomCSS",uninstallCommand:"extension.uninstallCustomCSS"},[a.customUI]:{extensionID:"subframe7536.custom-ui-style",extensionName:"Custom UI Style",importSetting:"custom-ui-style.external.imports",installCommand:"custom-ui-style.reload",uninstallCommand:"custom-ui-style.rollback"},[a.apcCustomizeUI]:{extensionID:"drcika.apc-extension",extensionName:"Apc Customize UI++",importSetting:"apc.imports",installCommand:"apc.extension.enable",uninstallCommand:"apc.extension.disable"}};e.InstallationManager=class{constructor(t,e){this.context=t,this.installMethod=e,this.path=this.generatePath(),i.forVSCode&&s.workspace.onDidChangeConfiguration((t=>{if(t.affectsConfiguration("animations.Install-Method")){const t=s.workspace.getConfiguration("animations").get("Install-Method");s.window.showInformationMessage(`VSCode Animations: Install Method now ${t}`),this.removeFromConfig().then((()=>{s.commands.executeCommand(r[this.installMethod].uninstallCommand),s.extensions.getExtension(r[this.installMethod].extensionID)?this.installMethod===a.customCSSAndJS&&s.commands.executeCommand("workbench.action.reloadWindow"):(this.installMethod=t,this.path=this.generatePath(),this.verifyInstallMethod()&&this.install(!0))}))}}))}getPath(){return this.path}generatePath(){const t="/"===this.context.extensionPath.charAt(0)?"file://":"file:///",e=(0,o.homedir)();return(t+(this.installMethod===a.apcCustomizeUI&&this.context.extensionPath.startsWith(e)?this.context.extensionPath.replace(e,"${userHome}"):this.context.extensionPath)+"/dist/updateHandler.js").replace(/\\/g,"/")}showInstallMethodPicker(){s.window.showQuickPick(Object.values(a).map((t=>({label:t,description:t===this.installMethod?"Active":void 0})))).then((t=>{t?.label&&s.workspace.getConfiguration("animations").update("Install-Method",t.label,!0)}))}checkForInstallMethod(){if(s.extensions.getExtension(r[a.customCSSAndJS].extensionID)&&s.extensions.getExtension(r[a.apcCustomizeUI].extensionID)&&s.window.showErrorMessage("VSCode Animations: Both Custom CSS and JS and Apc Customize UI++ are installed",`Use ${a.customCSSAndJS}`,`Use ${a.apcCustomizeUI}`).then((t=>t===`Use ${a.customCSSAndJS}`?(this.installMethod=a.customCSSAndJS,this.path=this.generatePath(),void s.workspace.getConfiguration("animations").update("Install-Method",a.customCSSAndJS,!0)):t===`Use ${a.apcCustomizeUI}`?(this.installMethod=a.apcCustomizeUI,this.path=this.generatePath(),void s.workspace.getConfiguration("animations").update("Install-Method",a.apcCustomizeUI,!0)):void 0)),!s.extensions.getExtension(r[this.installMethod].extensionID))for(const t of Object.values(a))s.extensions.getExtension(r[t].extensionID)&&(s.window.showInformationMessage(`VSCode Animations: Install Method is ${t} given it is already installed`),this.installMethod=t,this.path=this.generatePath(),s.workspace.getConfiguration("animations").update("Install-Method",t,!0))}verifyInstallMethod(){const t=r[this.installMethod];return!!s.extensions.getExtension(t.extensionID)||(s.window.showErrorMessage(`VSCode Animations: Please install ${t.extensionName} for animations to work`,`Install ${t.extensionName}`,i.forVSCode?"Change Install Method":"").then((e=>{e===`Install ${t.extensionName}`?s.commands.executeCommand("workbench.extensions.installExtension",t.extensionID).then((()=>{s.commands.executeCommand("workbench.action.reloadWindow")})):"Change Install Method"===e&&s.commands.executeCommand("VSCode-Animations.changeInstallMethod")})),!1)}install(t=!1){this.verifyInstallMethod()&&(t?this.addToConfigNeeded()&&s.window.showInformationMessage(`VSCode Animations: Install Required, installation method is ${r[this.installMethod].extensionName}, window will reload`,"Install Now").then((e=>{"Install Now"===e&&this.addToConfig(t).then((t=>{s.commands.executeCommand(r[this.installMethod].installCommand),this.installMethod===a.customCSSAndJS&&s.commands.executeCommand("workbench.action.reloadWindow")}))})):this.addToConfig().then((t=>{s.commands.executeCommand(r[this.installMethod].installCommand),this.installMethod===a.customCSSAndJS&&s.commands.executeCommand("workbench.action.reloadWindow")})))}isAllowedVersion(t){const e=t.split("."),n="1.0.14".split(".");for(let t=0;t<e.length;t++){const o=parseInt(e[t]),s=parseInt(n[t]);if(o>s)return!0;if(o<s)return!1}return!0}addToConfig(t=!1){const e=s.workspace.getConfiguration();let n=e.get(r[this.installMethod].importSetting);if(t&&n&&n.length>0){const t=/brandonkirbyson\.vscode-animations-\d+\.\d+\.\d+/;for(let e=0;e<n.length;e++){const o=n[e].match(t);if(o&&o.length>0){const t=o[0].split("-")[o[0].split("-").length-1];if(this.isAllowedVersion(t))return Promise.resolve(!1)}}}n&&(n=this.removeOldConfigPaths(this.path,n));let o=!1;return n&&!n.includes(this.path)&&(n.push(this.path),o=!0),e.update(r[this.installMethod].importSetting,n,s.ConfigurationTarget.Global).then((()=>o))}addToConfigNeeded(){let t=s.workspace.getConfiguration().get(r[this.installMethod].importSetting);if(t&&t.length>0){const e=/brandonkirbyson\.vscode-animations-\d+\.\d+\.\d+/;for(let n=0;n<t.length;n++){const o=t[n].match(e);if(o&&o.length>0){const t=o[0].split("-")[o[0].split("-").length-1];if(this.isAllowedVersion(t))return!1}}}return!0}removeOldConfigPaths(t,e){let n=[];for(let o=0;o<e.length;o++){const s=e[o];s===t&&n.push(s),("/dist/updateHandler.js"!==s.substring(s.length-22)&&"VSCode-Animations/dist/updateHandler.js"!==s.substring(s.length-39)||!s.includes("VSCode-Animations")&&!s.includes("brandonkirbyson.vscode-animations"))&&n.push(s)}return n}removeFromConfig(){const t=s.workspace.getConfiguration(),e=t.get(r[this.installMethod].importSetting);return e&&this.removeOldConfigPaths(this.path,e),e&&e.includes(this.path)?(e.splice(e.indexOf(this.path),1),t.update(r[this.installMethod].importSetting,e,s.ConfigurationTarget.Global)):Promise.resolve()}}},543:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getMessengerData=e.sendMessage=e.initMessenger=e.messengerItem=void 0;const o=n(398),s=n(456);e.messengerItem=o.window.createStatusBarItem(o.StatusBarAlignment.Right,100),e.initMessenger=function(){e.messengerItem.text="",e.messengerItem.accessibilityInformation={label:""},e.messengerItem.show()},e.sendMessage=function(t){const n=JSON.stringify(t);e.messengerItem.accessibilityInformation={label:n}},e.getMessengerData=function(t){const e=o.workspace.getConfiguration("animations");return{settings:{cursorAnimation:{enabled:e.get("CursorAnimation")??!1,color:e.get("UseCursorColorForCursorAnimation")?"--vscode-editorCursor-foreground":e.get("CursorAnimationOptions").Color,cursorStyle:e.get("CursorAnimationOptions").CursorStyle,trailLength:Math.max(Math.min(e.get("CursorAnimationOptions").TrailLength,50),1)},focus:{mode:e.get("Focus-Dimming-Mode")??s.FocusDimMode.window,amount:Math.max(Math.min(e.get("Focus-Dimming-Amount")??50,100),0),duration:Math.max(Math.min(e.get("Durations")["Focus-Dimming"]??200,1e4),0)}},css:t}}},398:t=>{t.exports=require("vscode")},857:t=>{t.exports=require("os")}},e={},n=function n(o){var s=e[o];if(void 0!==s)return s.exports;var i=e[o]={exports:{}};return t[o](i,i.exports,n),i.exports}(265);module.exports=n})();